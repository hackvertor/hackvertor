[
  {
    "tagName": "base62_encode",
    "description": "Performs a base62 encode.",
    "author": "H1v0lt4g3",
    "numberOfArgs": 0,
    "language": "Python"
  },
  {
    "tagName": "base62_decode",
    "description": "Performs a base62 decode.",
    "author": "H1v0lt4g3",
    "numberOfArgs": 0,
    "language": "Python"
  },
  {
    "tagName": "hello_world",
    "description": "An example tag that shows the JSON structure.",
    "author": "hackvertor",
    "numberOfArgs": 2,
    "argument1": "strHello",
    "argument1Type": "String",
    "argument1Default": "Hello world",
    "argument2": "intTest",
    "argument2Type": "Number",
    "argument2Default": "1337",
    "language": "Python"
  },
  {
    "tagName": "ean13",
    "description": "EAN13 checksum",
    "author": "pentagridsec",
    "numberOfArgs": 1,
    "argument1": "append",
    "argument1Type": "Number",
    "argument1Default": "1",
    "argument2": "notused",
    "argument2Type": "String",
    "argument2Default": "",
    "language": "Python"
  },
  {
    "tagName": "totp",
    "description": "Create Time-based OTPs on the fly, secret as input",
    "author": "pentagridsec",
    "numberOfArgs": 0,
    "language": "Python"
  },
  {
    "tagName": "ip",
    "description": "Generates a random IP",
    "author": "Techbrunch",
    "numberOfArgs": 0,
    "language": "JavaScript"
  },
  {
    "argument1Default": "4",
    "author": "Techbrunch",
    "argument1Type": "String",
    "numberOfArgs": 1,
    "argument1": "version",
    "description": "Generates a UUID",
    "language": "Python",
    "tagName": "uuid",
    "argument2": "notused",
    "argument2Type": "String",
    "argument2Default": ""
 },
  {
    "argument1Default": "0x100",
    "author": "hackvertor",
    "argument1Type": "Number",
    "numberOfArgs": 1,
    "argument1": "mask",
    "description": "This tag creates a unicode overflow.",
    "language": "JavaScript",
    "tagName": "unicode_overflow",
    "argument2": "notused",
    "argument2Type": "String",
    "argument2Default": ""
  },
  {
    "argument1Default": "0xfff",
    "author": "hackvertor",
    "argument1Type": "Number",
    "numberOfArgs": 1,
    "argument1": "max",
    "description": "This tag created multiple unicode overflows",
    "language": "JavaScript",
    "tagName": "unicode_overflow_variations",
    "argument2": "notused",
    "argument2Type": "String",
    "argument2Default": ""
  },
  {
    "description": "Encodes Q encoded word",
    "language": "JavaScript",
    "tagName": "encoded_word_encode",
    "author": "hackvertor",
    "numberOfArgs": 0
  },
  {
    "description": "Decode Q encoded word",
    "language": "JavaScript",
    "tagName": "encoded_word_decode",
    "author": "hackvertor",
    "numberOfArgs": 0
  },
  {
    "description": "UTF-7 email encoder",
    "language": "Groovy",
    "tagName": "email_utf7",
    "author": "hackvertor",
    "numberOfArgs": 0
  },
  {
    "argument1Default": "iso-8859-1",
    "author": "hackvertor",
    "argument1Type": "String",
    "numberOfArgs": 1,
    "argument1": "charset",
    "description": "Creates encoded word meta data",
    "language": "JavaScript",
    "tagName": "encode_word_meta",
    "argument2": "notused",
    "argument2Type": "String",
    "argument2Default": ""
  },
  {
    "description": "Decodes email based UTF-7",
    "language": "Groovy",
    "tagName": "email_utf7_decode",
    "author": "hackvertor",
    "numberOfArgs": 0
  },
  {
    "description": "Makes a request through Burp",
    "language": "Python",
    "tagName": "read_url_burp",
    "author": "hackvertor",
    "numberOfArgs": 0
  },
  {
   "description": "Escape a string so it can be included in a JSON string",
   "language": "JavaScript",
   "tagName": "JSON_string_escape",
   "author": "noraj",
   "numberOfArgs": 0
  },
  {
   "description": "Unescape a JSON escaped string",
   "language": "JavaScript",
   "tagName": "JSON_string_unescape",
   "author": "noraj",
   "numberOfArgs": 0
  },
  {
   "description": "zlib_compress",
   "language": "Python",
   "tagName": "zlib_compress",
   "author": "mwalkowski",
   "numberOfArgs": 0
  },
{
   "description": "Convert JSON to x-www-form-urlencoded",
   "language": "JavaScript",
   "tagName": "json2form",
   "author": "guusec",
   "numberOfArgs": 0
},
  {
     "description": "Convert JSON to x-www-form-urlencoded",
     "language": "JavaScript",
     "tagName": "json2form",
     "author": "guusec",
     "numberOfArgs": 0
  },
  {
    "argument1Default": "5",
    "argument2Default": "email",
    "author": "hackvertor",
    "argument1Type": "String",
    "numberOfArgs": 2,
    "argument1": "items",
    "argument2Type": "String",
    "argument2": "dummyDataType",
    "description": "Creates some dummy data using AI",
    "language": "AI",
    "tagName": "createDummyData"
  },
  {
    "description": "Generates random chars based on a regex input e.g. [a-f]{4}",
    "language": "Python",
    "tagName": "randChrsBasedOnRegex",
    "author": "hackvertor",
    "numberOfArgs": 0
  },
  {
    "description": "It accepts an input string containing gzip-compressed data encoded in base64, base64-decodes it to bytes, inflates it with gzip to recover the original raw bytes, then base64-encodes that result again into the output string.",
    "language": "Python",
    "tagName": "gzip_compress",
    "author": "irsdl",
    "numberOfArgs": 0
  },
  {
    "description": "It takes an input string that is base64-encoded gzip data, base64-decodes it to raw gzip bytes, decompresses those bytes with gzip, and then base64-encodes the uncompressed result into the output string.",
    "language": "Python",
    "tagName": "gzip_decompress",
    "author": "irsdl",
    "numberOfArgs": 0
  },
  {
    "description": "Pretty Print JSON",
    "language": "JavaScript",
    "tagName": "pretty_json",
    "author": "Corey Arthur",
    "numberOfArgs": 1,
    "argument1Type": "Number",
    "argument1": "spacing",
    "argument2": "notused",
    "argument2Type": "String",
    "argument2Default": ""
  },
  {
    "argument1Default": "1.0",
    "author": "hackvertor",
    "argument1Type": "String",
    "numberOfArgs": 1,
    "argument1": "temperature",
    "description": "This tag generates similar names to the input",
    "language": "AI",
    "tagName": "similarNames"
  }
]
